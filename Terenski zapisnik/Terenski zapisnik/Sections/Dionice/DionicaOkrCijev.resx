<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>